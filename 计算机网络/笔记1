物理层：其实就是网线，两台计算机通过网线连接，通过网线发送电信号，也就是01信号
数据链路层：光能发送信号还不行，在没有规矩的世界里，01和没有任何的意义，不同的人可以有不同的解读，而数据链路层，就规定了数据的解读协议。数据分为header+data
header长度固定，data有一个最大最小范围，称为数据帧，如果数据超出帧限制，就需要分块多帧发送

http:
application/octet-stream ： 二进制流数据（常见的文件下载）



![img](https://i.loli.net/2021/06/03/Xgu28qmpA3OJlEc.jpg)



序列号seq：占4个字节，用来标记数据段的顺序，TCP把连接中发送的所有数据字节都编上一个序号.比如0001

确认号ack：占4个字节，期待收到对方下一个报文段的第一个数据字节的序号；（就是说上一次接收方收到的发送方发送的报文序号假如是seq,接收方在确认接完本次数据，需要向发送方返回一个继续接收数据的响应，在返回的将ack确认号赋值为本次接受数据的seq序号加上1，表示本次数据序号是1000，下一次希望是1001）

确认ACK：占1位，仅当ACK=1时，确认号字段才有效。ACK=0时，确认号无效

同步SYN：连接建立时用于同步序号。当SYN=1，ACK=0时表示：这是一个连接请求报文段。若同意连接，则在响应报文段中使得SYN=1，ACK=1。因此，SYN=1表示这是一个连接请求，或连接接受报文。SYN这个标志位只有在TCP建产连接时才会被置1，握手完成后SYN标志位被置0

终止FIN：用来释放一个连接。FIN=1表示：此报文段的发送方的数据已经发送完毕，并要求释放运输连接

| **字段** | **含义**                                                     |
| -------- | ------------------------------------------------------------ |
| ACK      | 确认号是否有效，一般置为1。                                  |
| PSH      | 提示接收端应用程序立即从TCP缓冲区把数据读走。                |
| RST      | 对方要求重新建立连接，复位。                                 |
| SYN      | 请求建立连接，并在其序列号的字段进行序列号的初始值设定。建立连接，设置为1 |
| FIN      | 希望断开连接。                                               |
| URG      | 紧急指针是否有效。为1，表示某一位需要被优先处理              |



关于tcp为什么需要三次握手，而不是一次两次或者四次的理解

1.首先连接请求时请求方发向被请求方，这算第一次，如果一次就建立连接显然不可能，因为报文可能在中途丢失或者服务器自身原因没接到，这样如果一次就建立连接，那么请求方在发出建立连接后就立即认为连接已经建立，就立马发送数据是不可靠的

2.因为一次不可能建立连接，所需被请求方接到请求报文后，需要对这个请求进行应答，这样请求方就知道连接已经建立，可以发送报文，但因为被请求方也可以向请求方发送报文，所以同理，两次也不行，因为被请求方发出的确认报文不一定被请求方知道，如果被请求方认为发出确认报文就可以发送数据是不行的

3.所以请求方在接收到被请求方的确认报文后需要在发一个再次确认的报文，这样就比较可靠，可以开始通信了



【问题2】为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？

答：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假象网络是不可靠的，有可以最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。在Client发送出最后的ACK回复，但该ACK可能丢失。Server如果没有收到ACK，将不断重复发送FIN片段。所以Client不能立即关闭，它必须确认Server接收到了该ACK。Client会在发送出ACK之后进入到TIME_WAIT状态。Client会设置一个计时器，等待2MSL的时间。如果在该时间内再次收到FIN，那么Client会重发ACK并再次等待2MSL。所谓的2MSL是两倍的MSL(Maximum Segment Lifetime)。MSL指一个片段在网络中最大的存活时间，2MSL就是一个发送和一个回复所需的最大时间。如果直到2MSL，Client都没有再次收到FIN，那么Client推断ACK已经被成功接收，则结束TCP连接

【问题4】如果已经建立了连接，但是客户端突然出现故障了怎么办？

TCP还设有一个保活计时器，显然，客户端如果出现故障，服务器不能一直等下去，白白浪费资源。服务器每收到一次客户端的请求后都会重新复位这个计时器，时间通常是设置为2小时，若两小时还没有收到客户端的任何数据，服务器就会发送一个探测报文段，以后每隔75秒钟发送一次。若一连发送10个探测报文仍然没反应，服务器就认为客户端出了故障，接着就关闭连接。



如果A B两个主机连接正常，B突然重启，tcp处于什么状态







根据同源策略，cookie是区分端口的，但是浏览器实现来说，“cookie区分域，而不区分端口，也就是说，同一个ip下的多个端口下的cookie是共享的！“，题主所说的ip相同，端口不同，覆盖就是这个道理。



