注意在 JavaScript 中对象和数组是通过引用传入的，所以对于一个数组或对象类型的 prop 来说，在子组件中改变变更这个对象或数组本身将会影响到父组件的状态。


@input.native的原理（就是在组件的根元素上绑定了原生事件，在使用第三方组件，因为组件的根元素是不确定的所以事件不一定会被触发）
elementui type number触发原生input事件的原理
（通过$listenner拿到组件上绑定的所有监听事件，然后手动调用这个事件）

elementui datepicker pickeroption的原理
disabledate函数中的参数是日期表中每一项的时间戳Tue May 04 2021 00:00:00 GMT+0800（是零时零分零秒），而我们当前时间肯定时大于等于这个的
所以对于当天来说，需要减去一天的时间，因为Date.now()最多会比time大24小时，这样对于当天条件time.getTime()<Date.now()才会返回false

watch是不是异步?原理分析（是异步的）
watch deep：递归监听对象的每个属性，开销增大
@路径
如果 URL 以 @ 开头，它也会作为一个模块请求被解析。它的用处在于 Vue CLI 默认会设置一个指向 <projectRoot>/src 的别名 @。(仅作用于模版中)


一个非 prop 的 attribute 是指传向一个组件，但是该组件并没有相应 prop 定义的 attribute。

因为显式定义的 prop 适用于向一个子组件传入信息，然而组件库的作者并不总能预见组件会被用于怎样的场景。这也是为什么组件可以接受任意的
attribute，而这些 attribute 会被添加到这个组件的根元素上。

         依赖                                观察目标                               观察者


-------------------------           -------------------------           -----------------------
|      Dep              |                     data                      |       Watcher       |
|------------------------           -------------------------           -----------------------
|     target            |                     get                       |       addDep
|     subs              |                     set                        |       .....
|     notify            |                                                  |

|     .......           |                                               |
| -----------------------                                               |

target指向Watcher的实例
addDep将Watcher自身放入Dep的subs数组中（注册）,当nofity的时候，就会遍历subs中的所有观察者
(set会通知依赖发生了变化，依赖再去通知注册到其自身的观察者)

快速原型开发
vue serve  xxx.vue


router-view里面的router-view需要写子路由

scoped编译的时候如果使用了子组件，会将scoped特性加到子组件上，子组件编译的时候，会把scoped特性加到子组件的根元素上（vue自身的行为）



@click.native 是给组件绑定原生事件，只能用在组件上，不可以用在原生元素上。

在组件上绑定@click="clickCpn"事件，click事件无法触发也不生效，需要通过使用@click.native="clickCpn"，才能够执行clickCpn方法,   @click.native 监听组件根元素的原生事件 。

除了 @click.native ，还可以在子组件中添加this.$emit ("click" ，value )方法 将子组件的值传到父组件



vue每次依赖的数据更新都会去执行render函数，为的就是生成新的vnode，然后与老vnode对比，对有差异的vnode生成真实dom渲染到页面，能够尽可能的减少dom的更新范围（页面的性能主要消耗在dom的更新上）